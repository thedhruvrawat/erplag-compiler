**Code Generation test case 2: Computing expressions using integer and boolean data type**

**Single driver module with single level nesting **

<<<driver program>>>
start
	declare x, y:real;
	declare z1, z2, z3, z4, z5:boolean;
	get_value(x);
	get_value(y);
	z1 := x > y;
	z2 := x>=y;
	z3 := x<y;
	print(z1);
	print(z2);
	z4:= x<=y;
	print(z3);
	print(z4);
	print(z5);
	z5 := z1 OR z3 AND z5;
end

** On the console
Input: Enter an integer value
2
Input: Enter an integer value
3
Output: 9
Output: true

For values of x = 2 and y = 3 as run time input, print z as 9.
Then print v as true (use string true or false to print output of a variable of boolean type).
 

Similarly run the generated assembly code for other input values and verify.

**
