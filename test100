<<module mod1>>
takes input [index: integer, val_: integer];
** this function does not return any value**
start
    declare i_1: integer;
    i_1:= val_+ index - 4;
    print(i_1);
    end
    <<<driver Program>>>
    start
    
    declare a,b, dummy:integer;
    a:=48;
    b:=10;

    **int 23.a;** **Intentional Error**

    dummy:=100;
    declare flag: boolean;
    flag:=(a>=30)AND(b<30);
    switch(flag)
    start
        case false  :print(100);
                    break;
        case true   :use module mod1 with parameters a, b;
                    break;
    end
    switch(flag)
    start
        case false  :print(100);
                    break;
        case true   :use module mod1 with parameters a, b;
                    break;
    end
    switch(flag)
    start
        case false  :print(100);
                    break;
        case true   :use module mod1 with parameters a, b;
                    break;
    end
    switch(flag)
    start
        case false  :print(121200);
                    break;




        case true   :use module mod1 with parameters a, b;
                    break;
    end
    switch(flag)
    start
        case false  :print(100);
                    break;
        case true   :use module mod1 with parameters a, b;
                    break;
    end
    switch(flag)
    start
        case false  :print(100);
                    break;
        case true   :use module mod1 with parameters a, b;
                    break;
    end
    switch(flag)
    start
        case false  :print(100);
                    break;
        case true   :use module mod1 with parameters a, b;
                    break;
    end
    switch(flag)
    start
        case false  :print(100);
                    break;
        case true   :use module mod1 with parameters a, b;
                    break;
    end
    switch(flag)
    start
        case false  :print(100);
                    break;
        case true   :use module mod1 with parameters a, b;
                    break;
    end



    switch(flag)
    start
        case false  :print(100);
                    break;
        case true   :use module mod1 with parameters a, b;
                    break;
    end
    switch(flag)
    
    
    start
        case false  :print(100);
                    break;
        case true   :use module mod1 with parameters a, b;
                    break;
    end
    switch(flag)
    start
        case false  :print(100);
                    break;
        case true   :use module mod1 with parameters a, b;
                    break;
    end
    switch(flag)
    start
        case false  :print(100);
                    break;
        case true   :use module mod1 with parameters a, b;
                    break;
    end
end