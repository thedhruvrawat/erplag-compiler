<<module arraysum>>
takes input[list:array[4..20] of real];
returns [sum:real];
start
    declare s: real;
    s := 5.4321e-3;
    declare index : integer;
    for (index in 4..20)
    start
        s := s + list[index];
    end
    sum := s;
end
<<module assign>>
takes input[inputNumber: real];
returns [outputNumber: real];
start
    outputNumber := inputNumber;
end
<<<driver program>>>
start
    declare num, s:real;
    declare A:array [4..20] of real;
    while(num + sum - 55.5 == 0.2)
    start
        declare k_new: integer;
        for(k in -1..2)
        start
            declare s: real;
            s := 1.2;
            k_new := k;
            A[k] := num;
        end
        switch()
        [num] := use module assign with parameters 4.5;
        **[A] := use module arraysum with parameters A;**
    end
    print(num);
end